# previous compose
#version: "2"
#services:
#  db:
#    image: mysql
#    command: --default-authentication-plugin=mysql_native_password
#    restart: always
#    ports:
#      - "3306:3306"
#    volumes:
#      - ./data:/var/lib/mysql
#    environment:
#      MYSQL_ROOT_PASSWORD: 2c179piE*
#      MYSQL_DATABASE: chipin

version: "3.8"
services:
  backend-db:
    image: postgres:15.3-alpine3.18
    restart: on-failure
    ports:
      - "5433:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_DB=chipin
      - POSTGRES_SCHEMA=public
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - backend-db-data:/var/lib/postgresql/data

  backend:
    build: .
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - backend-db
    environment:
      - CHIPIN_HOST=https://auth.chipin.ninja/
      - DB_HOST=backend-db
      - DB_PORT=5432
      - KC_HOST=keycloak
      - KC_PORT=8081

  keycloak-db:
    image: postgres:15.3-alpine3.18
    restart: on-failure
    ports:
      - "5434:5432"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - wal_level=logical
    command: [ "postgres", "-c", "wal_level=logical" ]
    volumes:
      - keycloak-db-data:/var/lib/postgresql/data

  keycloak:
    build: keycloak
    command: ['start-dev', '--import-realm']
    ports:
      - "8081:8081"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      - KC_HTTP_PORT=8081
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-db/keycloak
      - KC_DB_URL_DATABASE=keycloak
      - KC_DB_USERNAME=postgres
      - KC_DB_PASSWORD=postgres
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin
      - KC_HOSTNAME_URL=auth.chipin.ninja
    depends_on:
      - keycloak-db

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - zookeeper
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  connect:
    image: quay.io/debezium/connect:2.4
    ports:
      - "8083:8083"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    depends_on:
      - zookeeper
      - kafka
      - keycloak-db
      - backend-db
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses

#  cp-connect:
#    image: confluentinc/cp-kafka-connect:latest
#    ports:
#      - "8083:8083"
#    extra_hosts:
#      - "host.docker.internal:host-gateway"
#    depends_on:
#      - zookeeper
#      - kafka
#      - keycloak-db
#      - backend-db
#    environment:
#      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
#      CONNECT_GROUP_ID: connect-cluster
#      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
#      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
#      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
#      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
#      CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: "false"
#      CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
#      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
#      CONNECT_REST_ADVERTISED_HOST_NAME: connect
#      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"

#  watcher:
#    image: debezium/kafka:0.9
#    command: watch-topic -a -k keycloak-db-server.public.user_entity
#    depends_on:
#      - kafka
#      - zookeeper
#    environment:
#      ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_BROKER: kafka:9092

volumes:
  backend-db-data:
  keycloak-db-data: