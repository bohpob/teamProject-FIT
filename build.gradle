plugins {
	//noinspection JavaPluginLanguageLevel
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
}

group = 'cz.cvut.fit.sp'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
//	implementation 'org.springframework.boot:spring-boot-gradle-plugin:3.1.3'

	// authorization
	implementation "org.springframework.boot:spring-boot-starter-oauth2-client"
	implementation "org.springframework.boot:spring-boot-starter-oauth2-resource-server"

	// keycloak spi
	implementation "org.keycloak:keycloak-core"
	implementation "org.keycloak:keycloak-server-spi"
	implementation "org.keycloak:keycloak-server-spi-private"

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	runtimeOnly 'org.postgresql:postgresql'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
}

/*
test {
	useJUnitPlatform()
}

jar {
	manifest {
		attributes('Main-Class': 'cz.cvut.fit.sp.chipin.ChipinApplication')
	}
}

tasks.register('customFatJar', Jar) {
	manifest {
		attributes 'Main-Class': 'cz.cvut.fit.sp.chipin.ChipinApplication'
	}
	archiveBaseName = 'all-in-one-jar'
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
	with jar
}
*/